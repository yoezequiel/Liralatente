---
import { getCollection } from "astro:content";
import PoesiaCard from "../components/PoetryCard.astro";
import Layout from "../Layouts/Layout.astro";

const poesias = await getCollection("poesias");
// Ordenar por índice de forma descendente (16, 15, 14...1) - última primero, primera al final
const poesiasOrdenadas = poesias.sort((a, b) => b.data.index - a.data.index);

// Obtener información útil sobre la colección
const primeraPoesia = poesias.sort((a, b) => a.data.index - b.data.index)[0];
const ultimaPoesia = poesias.sort((a, b) => a.data.index - b.data.index)[
    poesias.length - 1
];
const totalPoesias = poesias.length;

// Categorizar poesías por temas (basado en títulos y contenido)
const getTheme = (titulo: string) => {
    const lowerTitle = titulo.toLowerCase();
    if (
        lowerTitle.includes("amor") ||
        lowerTitle.includes("febrero") ||
        lowerTitle.includes("corazón") ||
        lowerTitle.includes("latido")
    )
        return "amor";
    if (
        lowerTitle.includes("silencio") ||
        lowerTitle.includes("melancol") ||
        lowerTitle.includes("soledad")
    )
        return "melancolia";
    if (
        lowerTitle.includes("ansiedad") ||
        lowerTitle.includes("fortaleza") ||
        lowerTitle.includes("cicatrices")
    )
        return "lucha";
    if (
        lowerTitle.includes("sueño") ||
        lowerTitle.includes("percepcion") ||
        lowerTitle.includes("subconsciente")
    )
        return "reflexion";
    return "existencial";
};

const themes = {
    amor: { name: "Amor & Emociones", color: "#e91e63", count: 0 },
    melancolia: { name: "Melancolía & Silencio", color: "#3f51b5", count: 0 },
    lucha: { name: "Lucha Interior", color: "#ff5722", count: 0 },
    reflexion: { name: "Reflexión & Sueños", color: "#9c27b0", count: 0 },
    existencial: { name: "Existencial", color: "#607d8b", count: 0 },
};

// Contar poesías por tema
poesias.forEach((poesia) => {
    const theme = getTheme(poesia.data.titulo);
    themes[theme].count++;
});
---

<Layout title="Colección Completa">
    <div class="collection-hero">
        <div class="hero-content">
            <h1 class="collection-title">Colección Completa</h1>
            <p class="collection-description">
                Un viaje íntimo a través de {totalPoesias} composiciones que exploran
                los rincones más profundos del alma humana
            </p>

            <div class="collection-stats">
                <div class="stat-card">
                    <span class="stat-number">{totalPoesias}</span>
                    <span class="stat-label">Poesías</span>
                </div>
                <div class="stat-card">
                    <span class="stat-number"
                        >{
                            Object.values(themes).filter((t) => t.count > 0)
                                .length
                        }</span
                    >
                    <span class="stat-label">Temas</span>
                </div>
                <div class="stat-card featured">
                    <span class="stat-label">Primera</span>
                    <span class="stat-poem">"{primeraPoesia.data.titulo}"</span>
                </div>
                <div class="stat-card featured">
                    <span class="stat-label">Última</span>
                    <span class="stat-poem">"{ultimaPoesia.data.titulo}"</span>
                </div>
            </div>
        </div>
    </div>

    <div class="themes-section">
        <h2 class="section-title">Explorar por Temas</h2>
        <div class="themes-grid">
            {
                Object.entries(themes)
                    .filter(([_, theme]) => theme.count > 0)
                    .map(([key, theme]) => (
                        <div
                            class="theme-card"
                            style={`--theme-color: ${theme.color}`}>
                            <div
                                class="theme-icon"
                                style={`background: ${theme.color}20; border-color: ${theme.color}30`}>
                                <div
                                    class="theme-dot"
                                    style={`background: ${theme.color}`}
                                />
                            </div>
                            <h3 class="theme-name">{theme.name}</h3>
                            <span class="theme-count">
                                {theme.count} poesía
                                {theme.count !== 1 ? "s" : ""}
                            </span>
                        </div>
                    ))
            }
        </div>
    </div>

    <div class="collection-grid-section">
        <div class="section-header">
            <h2 class="section-title">Todas las Poesías</h2>
            <p class="section-subtitle">
                Ordenadas de la más reciente a la primera
            </p>
        </div>

        <div class="poetry-grid">
            {poesiasOrdenadas.map((poesia) => <PoesiaCard poesia={poesia} />)}
        </div>
    </div>
</Layout>

<style>
    .collection-hero {
        text-align: center;
        padding: 3rem 0 4rem;
        background: radial-gradient(
            ellipse at center,
            rgba(129, 178, 154, 0.08) 0%,
            transparent 70%
        );
        position: relative;
        margin-bottom: 4rem;
    }

    .hero-content {
        max-width: 800px;
        margin: 0 auto;
    }

    .collection-title {
        font-family: "Playfair Display", serif;
        font-size: clamp(2.5rem, 6vw, 4rem);
        font-weight: 700;
        color: #f4f1de;
        margin-bottom: 1.5rem;
        line-height: 1.2;
    }

    .collection-description {
        font-size: 1.3rem;
        color: #c9c5c2;
        line-height: 1.6;
        margin-bottom: 3rem;
        font-style: italic;
    }

    .collection-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        max-width: 900px;
        margin: 0 auto;
    }

    .stat-card {
        background: rgba(255, 255, 255, 0.03);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 1.5rem;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        background: rgba(255, 255, 255, 0.06);
        border-color: rgba(129, 178, 154, 0.3);
    }

    .stat-number {
        display: block;
        font-size: 2.5rem;
        font-weight: 700;
        color: #81b29a;
        line-height: 1;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        display: block;
        color: #b8b5b2;
        font-size: 0.9rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 0.3rem;
    }

    .stat-card.featured .stat-label {
        color: #81b29a;
    }

    .stat-poem {
        display: block;
        color: #f4f1de;
        font-size: 1rem;
        font-style: italic;
        line-height: 1.3;
    }

    .themes-section {
        margin-bottom: 5rem;
    }

    .section-title {
        font-family: "Playfair Display", serif;
        font-size: 2.5rem;
        color: #f4f1de;
        text-align: center;
        margin-bottom: 1rem;
        font-weight: 600;
    }

    .section-subtitle {
        text-align: center;
        color: #b8b5b2;
        font-style: italic;
        margin-bottom: 3rem;
        font-size: 1.1rem;
    }

    .themes-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 3rem;
    }

    .theme-card {
        background: rgba(255, 255, 255, 0.03);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .theme-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(
            90deg,
            transparent,
            var(--theme-color),
            transparent
        );
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .theme-card:hover {
        transform: translateY(-5px);
        background: rgba(255, 255, 255, 0.06);
        border-color: rgba(255, 255, 255, 0.2);
    }

    .theme-card:hover::before {
        opacity: 1;
    }

    .theme-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        margin: 0 auto 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid;
        transition: all 0.3s ease;
    }

    .theme-dot {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .theme-card:hover .theme-dot {
        transform: scale(1.2);
    }

    .theme-name {
        font-family: "Playfair Display", serif;
        font-size: 1.3rem;
        color: #f4f1de;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .theme-count {
        color: #b8b5b2;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .collection-grid-section {
        margin-bottom: 4rem;
    }

    .section-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .poetry-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
        margin-bottom: 2rem;
    }

    @media (max-width: 768px) {
        .collection-hero {
            padding: 2rem 0 3rem;
        }

        .collection-description {
            font-size: 1.1rem;
        }

        .collection-stats {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .stat-card {
            padding: 1rem;
        }

        .stat-number {
            font-size: 2rem;
        }

        .themes-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .theme-card {
            padding: 1.5rem;
        }

        .poetry-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
    }

    @media (max-width: 480px) {
        .collection-stats {
            grid-template-columns: 1fr;
        }

        .themes-grid {
            grid-template-columns: 1fr;
        }

        .theme-icon {
            width: 50px;
            height: 50px;
        }

        .theme-dot {
            width: 16px;
            height: 16px;
        }
    }
</style>
